//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReferenceP3
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhotosVideos", Namespace="http://schemas.datacontract.org/2004/07/Model", IsReference=true)]
    public partial class PhotosVideos : object
    {
        
        private string AboutField;
        
        private System.Nullable<bool> CreateDateField;
        
        private int IdField;
        
        private string NameField;
        
        private string PathField;
        
        private System.Collections.Generic.List<ServiceReferenceP3.Person> PersonField;
        
        private ServiceReferenceP3.Place PlaceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string About
        {
            get
            {
                return this.AboutField;
            }
            set
            {
                this.AboutField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CreateDate
        {
            get
            {
                return this.CreateDateField;
            }
            set
            {
                this.CreateDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path
        {
            get
            {
                return this.PathField;
            }
            set
            {
                this.PathField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceP3.Person> Person
        {
            get
            {
                return this.PersonField;
            }
            set
            {
                this.PersonField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceP3.Place Place
        {
            get
            {
                return this.PlaceField;
            }
            set
            {
                this.PlaceField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Place", Namespace="http://schemas.datacontract.org/2004/07/Model", IsReference=true)]
    public partial class Place : object
    {
        
        private int IdField;
        
        private string NameField;
        
        private ServiceReferenceP3.PhotosVideos PhotosVideosField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceP3.PhotosVideos PhotosVideos
        {
            get
            {
                return this.PhotosVideosField;
            }
            set
            {
                this.PhotosVideosField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/Model", IsReference=true)]
    public partial class Person : object
    {
        
        private int IdField;
        
        private string NameField;
        
        private ServiceReferenceP3.PhotosVideos PhotosVideosField;
        
        private int PhotosVideosIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceP3.PhotosVideos PhotosVideos
        {
            get
            {
                return this.PhotosVideosField;
            }
            set
            {
                this.PhotosVideosField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhotosVideosId
        {
            get
            {
                return this.PhotosVideosIdField;
            }
            set
            {
                this.PhotosVideosIdField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceP3.IMplementInterface")]
    public interface IMplementInterface
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceImages/saveImage", ReplyAction="http://tempuri.org/InterfaceImages/saveImageResponse")]
        System.Threading.Tasks.Task saveImageAsync(string Name, string Path, string About, string Place, string People);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceImages/UpdateImage1", ReplyAction="http://tempuri.org/InterfaceImages/UpdateImage1Response")]
        System.Threading.Tasks.Task UpdateImage1Async(string Name, string Path, string About, string Place, string People);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceImages/deleteImage", ReplyAction="http://tempuri.org/InterfaceImages/deleteImageResponse")]
        System.Threading.Tasks.Task deleteImageAsync(string Path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceImages/getPhotos", ReplyAction="http://tempuri.org/InterfaceImages/getPhotosResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceP3.PhotosVideos>> getPhotosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceImages/getPlaces", ReplyAction="http://tempuri.org/InterfaceImages/getPlacesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceP3.Place>> getPlacesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceImages/getPerson", ReplyAction="http://tempuri.org/InterfaceImages/getPersonResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceP3.Person>> getPersonAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IMplementInterfaceChannel : ServiceReferenceP3.IMplementInterface, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class MplementInterfaceClient : System.ServiceModel.ClientBase<ServiceReferenceP3.IMplementInterface>, ServiceReferenceP3.IMplementInterface
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MplementInterfaceClient() : 
                base(MplementInterfaceClient.GetDefaultBinding(), MplementInterfaceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IMplementInterface.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MplementInterfaceClient(EndpointConfiguration endpointConfiguration) : 
                base(MplementInterfaceClient.GetBindingForEndpoint(endpointConfiguration), MplementInterfaceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MplementInterfaceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MplementInterfaceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MplementInterfaceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MplementInterfaceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MplementInterfaceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task saveImageAsync(string Name, string Path, string About, string Place, string People)
        {
            return base.Channel.saveImageAsync(Name, Path, About, Place, People);
        }
        
        public System.Threading.Tasks.Task UpdateImage1Async(string Name, string Path, string About, string Place, string People)
        {
            return base.Channel.UpdateImage1Async(Name, Path, About, Place, People);
        }
        
        public System.Threading.Tasks.Task deleteImageAsync(string Path)
        {
            return base.Channel.deleteImageAsync(Path);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceP3.PhotosVideos>> getPhotosAsync()
        {
            return base.Channel.getPhotosAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceP3.Place>> getPlacesAsync()
        {
            return base.Channel.getPlacesAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceP3.Person>> getPersonAsync()
        {
            return base.Channel.getPersonAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMplementInterface))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMplementInterface))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8000/ALEX");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return MplementInterfaceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IMplementInterface);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return MplementInterfaceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IMplementInterface);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IMplementInterface,
        }
    }
}
